/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package LinearSystem;

import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Graphics;
import java.awt.Color;
import java.awt.Graphics2D;
/**
 *
 * @author pyounglous
 */
public class LinearSystem extends javax.swing.JApplet {
    LinearEq linear;
    javax.swing.Timer timer;
    int NofPtls;
    double a,b,c,d;
    /**
     * Initializes the applet LinearSystem
     */
    @Override
    public void init() {
        /* Set the Nimbus look and feel */
         a=0;b=0;c=0;d=-1;
         NofPtls=2000;
  
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LinearSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LinearSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LinearSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LinearSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the applet */
        try {
            java.awt.EventQueue.invokeAndWait(new Runnable() {
                public void run() {
                    initComponents();

                    timer = new javax.swing.Timer(1,new aListener());
                    linear = new LinearEq(a,b,c,d,NofPtls,displayPanel.getWidth());
                }
            });
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }
    
    public class aListener implements ActionListener 
    {
       
        public void actionPerformed(ActionEvent e) {
                displayPanel.removeAll();

                displayPanel.repaint();
        }
    };
    
     public class MainDisplay extends javax.swing.JPanel{                
        
        MainDisplay(){
            super();
        }
        
        public void paintComponent(Graphics g) {
            super.paintComponent(g);
            Color color;
            int radius=3;
            int w;
            w=displayPanel.getWidth();
            
            for(int j=0;j<10;j++){
                linear.nextTime();
                for(int i=0;i<NofPtls;i++){
                    color =  Color.getHSBColor(((float)(linear.color[i]+Math.PI/2)/(float)(2*Math.PI)),1f,1f);
                    g.setColor(color);
                    g.fillOval((int)linear.x[i]-radius/2+w/2,-(int)linear.y[i]-radius/2+w/2,radius,radius);
                }
            }
        }
    }
    /**
     * This method is called from within the init() method to initialize the
     * form. WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jInternalFrame1 = new javax.swing.JInternalFrame();
        displayPanel = new MainDisplay();
        jButton1 = new javax.swing.JButton();
        aSlider = new javax.swing.JSlider();
        bSlider = new javax.swing.JSlider();
        dSlider = new javax.swing.JSlider();
        cSlider = new javax.swing.JSlider();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setMaximumSize(new java.awt.Dimension(800, 600));
        setMinimumSize(new java.awt.Dimension(800, 600));

        jInternalFrame1.setVisible(true);

        displayPanel.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout displayPanelLayout = new javax.swing.GroupLayout(displayPanel);
        displayPanel.setLayout(displayPanelLayout);
        displayPanelLayout.setHorizontalGroup(
            displayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 547, Short.MAX_VALUE)
        );
        displayPanelLayout.setVerticalGroup(
            displayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 547, Short.MAX_VALUE)
        );

        jButton1.setText("Start");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        aSlider.setMinimum(-100);
        aSlider.setValue(8);
        aSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                aSliderStateChanged(evt);
            }
        });

        bSlider.setMinimum(-100);
        bSlider.setValue(60);
        bSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                bSliderStateChanged(evt);
            }
        });

        dSlider.setMinimum(-100);
        dSlider.setValue(0);
        dSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                dSliderStateChanged(evt);
            }
        });

        cSlider.setMinimum(-100);
        cSlider.setValue(0);
        cSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                cSliderStateChanged(evt);
            }
        });

        jLabel1.setText("a");

        jLabel2.setText("b");

        jLabel3.setText("c");

        jLabel4.setText("d");

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/LinearSystem/Eq.gif"))); // NOI18N

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(displayPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(cSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(bSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(aSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addComponent(jLabel5)))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(displayPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(jLabel5)
                .addGap(34, 34, 34)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(aSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGap(1, 1, 1)
                .addComponent(cSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jInternalFrame1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jInternalFrame1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void aSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_aSliderStateChanged
        a=(double) aSlider.getValue()/100.;
//        linear = new LinearEq(a,b,c,d,NofPtls,displayPanel.getWidth());
    }//GEN-LAST:event_aSliderStateChanged

    private void bSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_bSliderStateChanged
        b=(double) aSlider.getValue()/100.;
//        linear = new LinearEq(a,b,c,d,NofPtls,displayPanel.getWidth());
    }//GEN-LAST:event_bSliderStateChanged

    private void dSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_dSliderStateChanged
        d=(double) aSlider.getValue()/100.;
//        linear = new LinearEq(a,b,c,d,NofPtls,displayPanel.getWidth());
    }//GEN-LAST:event_dSliderStateChanged

    private void cSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_cSliderStateChanged
        c=(double) aSlider.getValue()/100.;
//       linear = new LinearEq(a,b,c,d,NofPtls,displayPanel.getWidth());
    }//GEN-LAST:event_cSliderStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        jButton1.setText("Reset");
        
        linear = new LinearEq(a,b,c,d,NofPtls,displayPanel.getWidth());
        for(int j=0;j<1000;j++){
            linear.nextTime();
        }
        timer.start();
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSlider aSlider;
    private javax.swing.JSlider bSlider;
    private javax.swing.JSlider cSlider;
    private javax.swing.JSlider dSlider;
    private javax.swing.JPanel displayPanel;
    private javax.swing.JButton jButton1;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    // End of variables declaration//GEN-END:variables
}

class LinearEq {
       
    double dt;
    int NofPtls,w;
    double a,b,c,d;
    
    double x[];
    double y[];
    double color[];
    
    public LinearEq(double a,double b,double c,double d,int NofPtls,int width){
        this.a=a;
        this.b=b;
        this.c=c;
        this.d=d;
        this.NofPtls = NofPtls;

        dt=0.05;
        w=width;
        x= new double[NofPtls];
        y= new double[NofPtls];
        color= new double[NofPtls];
        for(int i=0;i<NofPtls;i++){
             x[i]=(double)w*(Math.random()-0.5);
             y[i]=(double)w*(Math.random()-0.5);
             color[i]=0;
        }
    }
    
    public void nextTime(){
        double xa,ya,dx,dy;
        for(int i=0;i<NofPtls;i++){
            xa=x[i];ya=y[i];
        // RungeKutta Method
            x[i] = x[i] + RKdx(x[i],y[i],dt);
            y[i] = y[i] + RKdy(x[i],y[i],dt);
            
            dx=xa-x[i];dy=ya-y[i];
            color[i]=Math.atan2(dy, dx);
            if(Math.pow(dx*dx+dy*dy,0.5)<2/(double)w){
                x[i]=(double)w*(Math.random()-0.5);
                y[i]=(double)w*(Math.random()-0.5);
            }
            if(Math.abs(x[i])>w/2){
                x[i]=(double)w*(Math.random()-0.5);
                y[i]=(double)w*(Math.random()-0.5);
            }
            if(Math.abs(y[i])>w/2){
                x[i]=(double)w*(Math.random()-0.5);
                y[i]=(double)w*(Math.random()-0.5);
            }

            
        }
   }
    
    double RKdx(double x,double y,double tau){
       double k1,k2,k3,k4;
        k1 = tau * dx(x        ,y);
        k2 = tau * dx(x + k1/2.,y);
        k3 = tau * dx(x + k2/2.,y);
        k4 = tau * dx(x + k3   ,y);
        
        return (k1+2*k2+2*k3+k4)/6.;
   }
    double RKdy(double x,double y,double tau){
       double k1,k2,k3,k4;
        k1 = tau * dy(x,y        );
        k2 = tau * dy(x,y + k1/2.);
        k3 = tau * dy(x,y + k2/2.);
        k4 = tau * dy(x,y + k3   );
        
        return (k1+2*k2+2*k3+k4)/6.;
   }
    
   double dx(double x,double y){
       //return a*x+b*y;
       return -y+a*x*(x*x+y*y);
       //return -x+a*y+x*x*y;
   } 
   double dy(double x,double y){
       //return c*x+d*y;
       return x+a*y*(x*x+y*y);
       //return b-a*y-x*x*y;
   } 
}
